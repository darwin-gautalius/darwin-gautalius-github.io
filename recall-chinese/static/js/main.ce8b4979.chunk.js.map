{"version":3,"sources":["app/components/Writer.tsx","app/data/data.ts","app/data/dictionary.ts","app/data/DataProvider.ts","app/Storage.tsx","app/config/showOutline.ts","app/pages/QuizPage.tsx","app/pages/AboutPage.tsx","app/data/radicals.ts","app/components/Info.tsx","app/components/RadicalCard.tsx","app/pages/RadicalsPage.tsx","app/components/Character.tsx","app/pages/WordsBankPage.tsx","app/App.tsx","app/AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["Writer","svgRef","createRef","hanziWriter","this","current","Error","props","character","showOutline","size","quiz","HanziWriter","create","width","height","padding","showCharacter","drawingWidth","beginQuiz","syncOutline","hideOutline","onComplete","summary","onQuizComplete","onCorrectStroke","strokeData","onQuizCorrectStroke","onMistake","onQuizMistake","highlightOnComplete","leniency","showHintAfterMisses","className","ref","Component","knownWordsTranslation","knownWords","Object","keys","dictionary","reduce","result","word","split","forEach","randomItem","items","Math","floor","random","length","createContextWithHook","StorageContext","useStorageContext","LOCAL_STORAGE_AVAILBLE","localStorage","LocalStorageProvider","storageKey","children","useState","data","getItem","JSON","parse","get","setData","setAndSaveData","newData","setItem","stringify","save","Provider","value","key","removeItem","clear","useShowOutlineConfig","defaultValue","storage","useStorage","QuizPage","setWord","hanzi","pinyin","map","char","newHanzi","useWord","meaning","randomize","setCurrent","isComplete","setIsComplete","level","part","join","block","onClick","newCurrent","disabled","AboutPage","href","GithubFilled","HomeFilled","radicals","Info","title","classnames","RadicalCard","radical","mainVariant","variants","otherVariants","slice","allRadicals","v","detail","knownWordsByRadical","filter","included","decomposition","includes","id","strokes","variant","definition","RadicalsPage","Character","WordsBankPage","index","Header","Content","App","location","useLocation","setShowOutline","showSettingDrawer","setShowSettingDrawer","toggleSettingDrawer","theme","mode","selectedKeys","pathname","Item","to","type","ghost","icon","SettingOutlined","placement","closable","onClose","visible","onChange","checked","path","component","AppProvider","basename","process","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ce8b4979.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport HanziWriter, { SummaryData, StrokeData } from 'hanzi-writer';\n\ninterface WriterProps {\n  size: number;\n  character: string;\n  showOutline?: boolean;\n  className?: string;\n  quiz?: boolean;\n  onQuizComplete?: (summary: SummaryData) => void;\n  onQuizCorrectStroke?: (strokeData: StrokeData) => void;\n  onQuizMistake?: (strokeData: StrokeData) => void;\n}\n\n// lazy to think about avoiding stale closure problem\nexport class Writer extends Component<WriterProps> {\n  svgRef = createRef<SVGSVGElement>();\n  hanziWriter: HanziWriter | null = null;\n\n  componentDidMount() {\n    if (!this.svgRef.current) {\n      throw new Error('cannot find SVG ref');\n    }\n    const { character, showOutline, size, quiz } = this.props;\n    this.hanziWriter = HanziWriter.create(this.svgRef.current, character, {\n      width: size,\n      height: size,\n      padding: size / 10,\n      showOutline,\n      showCharacter: !quiz,\n      drawingWidth: 32\n    });\n    if (quiz) {\n      this.beginQuiz();\n    }\n  }\n\n  componentDidUpdate() {\n    this.syncOutline();\n  }\n\n  syncOutline() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    const { showOutline } = this.props;\n    if (showOutline) {\n      this.hanziWriter.showOutline();\n    } else {\n      this.hanziWriter.hideOutline();\n    }\n\n  }\n\n  beginQuiz() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    this.hanziWriter.quiz({\n      onComplete: (summary) => {\n        if (this.props.onQuizComplete) {\n          this.props.onQuizComplete(summary);\n        }\n      },\n      onCorrectStroke: (strokeData) => {\n        if (this.props.onQuizCorrectStroke) {\n          this.props.onQuizCorrectStroke(strokeData);\n        }\n      },\n      onMistake: (strokeData) => {\n        if (this.props.onQuizMistake) {\n          this.props.onQuizMistake(strokeData);\n        }\n      },\n\n      highlightOnComplete: true,\n      leniency: 1,\n      showHintAfterMisses: true\n    });\n  }\n\n  render() {\n    const { size, className } = this.props;\n    return <svg ref={this.svgRef} width={size} height={size} className={className} />;\n  }\n}\n","import jsonData from './data.json';\n\nexport const knownWordsTranslation: Dictionary<string> = jsonData;\nexport const knownWords = Object.keys(knownWordsTranslation);\nexport const knownCharacters = Object.keys(\n  knownWords.reduce<Dictionary<boolean>>((result, word) => {\n    word.split('').forEach((character) => {\n      result[character] = true;\n    });\n    return result;\n  }, {})\n);\n","import jsonData from './dictionary.json';\nexport interface DictionaryData {\n  definition: string;\n  pinyin: string[],\n  decomposition: string;\n  radical: string;\n};\n\nexport const dictionary: Dictionary<DictionaryData> = jsonData;","import { useState } from 'react';\n\nimport { knownWordsTranslation, knownWords } from './data';\nimport { dictionary } from './dictionary';\n\nfunction randomItem<T>(items: T[]) {\n  const randomIndex = Math.floor(Math.random() * items.length);\n  return items[randomIndex];\n}\n\nexport function useWord(): [string[], string[][], string, () => void] {\n  const [word, setWord] = useState(randomItem(knownWords));\n  const randomize = () => {\n    let newHanzi: string;\n    do {\n      newHanzi = randomItem(knownWords);\n    } while (newHanzi === word);\n    setWord(newHanzi);\n  }\n  const hanzi = word.split('');\n  const pinyin = hanzi.map((char) => dictionary[char].pinyin);\n  return [hanzi, pinyin, knownWordsTranslation[word], randomize];\n}","import { createContextWithHook } from 'react-maid';\nimport React, { FC, useState } from 'react';\n\ninterface Storage {\n  clear: () => void;\n  setItem: (key: string, value: any) => void;\n  getItem: (key: string) => any;\n  removeItem: (key: string) => any;\n}\n\nconst [StorageContext, useStorageContext] = createContextWithHook<Storage>(\n  'StorageContext'\n);\n\ninterface LocalStorageProviderProps {\n  storageKey?: string;\n}\n\nconst LOCAL_STORAGE_AVAILBLE = typeof localStorage !== 'undefined';\nfunction save(storageKey: string, data: any) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    localStorage.setItem(storageKey, JSON.stringify(data));\n  }\n}\nfunction get(storageKey: string) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    const data = localStorage.getItem(storageKey);\n    if (data) {\n      return JSON.parse(data);\n    }\n  }\n  return {};\n}\n\nexport const LocalStorageProvider: FC<LocalStorageProviderProps> = ({ storageKey = 'storage', children }) => {\n  const [data, setData] = useState<Dictionary<any>>(() => {\n    return get(storageKey);\n  });\n\n  const setAndSaveData = (newData: any) => {\n    setData(newData);\n    save(storageKey, newData);\n  };\n\n  const setItem = (key: string, value: any) => {\n    setAndSaveData({ ...data, [key]: value });\n  };\n\n  const getItem = (key: string) => {\n    return data[key];\n  };\n\n  const removeItem = (key: string) => {\n    const newData = { ...data };\n    delete newData[key];\n    setAndSaveData(newData);\n  };\n\n  const clear = () => {\n    setAndSaveData({});\n  };\n\n  return (\n    <StorageContext.Provider value={{ setItem, getItem, removeItem, clear }}>\n      {children}\n    </StorageContext.Provider>\n  );\n};\n\nexport function useStorage<T>(key: string): [T | undefined, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue: T): [T, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue?: T): [T, (value: T) => void] {\n  const storage = useStorageContext();\n  const setItem = (value: T) => storage.setItem(key, value);\n  return [storage.getItem(key) || defaultValue, setItem];\n}\n","import { useStorage } from '../Storage';\n\nexport function useShowOutlineConfig() {\n  return useStorage<boolean>('showOutline', false);\n}","import { Button } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Writer } from '../components/Writer';\nimport Title from 'antd/lib/typography/Title';\nimport { useWord } from '../data/DataProvider';\nimport { useShowOutlineConfig } from '../config/showOutline';\n\nexport const QuizPage = () => {\n  const [hanzi, pinyin, meaning, randomize] = useWord();\n  const [current, setCurrent] = useState(0);\n  const [isComplete, setIsComplete] = useState(false);\n  const [showOutline] = useShowOutlineConfig();\n  const markAsComplete = () => setIsComplete(true);\n  const next = () => {\n    const newCurrent = current + 1;\n    if (newCurrent === hanzi.length) {\n      setCurrent(0);\n      randomize();\n    } else {\n      setCurrent(newCurrent);\n    }\n\n    setIsComplete(false);\n  };\n  return (\n    <div>\n      <div className=\"my-md\">\n        <Title level={2}>Word:</Title>\n        <b>{pinyin.map((part) => part[0]).join(' ')}</b>: {meaning}\n      </div>\n      <div className=\"my-md\">\n        <div className=\"d-flex\">\n          <Title level={2}>Write It Down:</Title>\n        </div>\n        <div className=\"d-flex f-center\"><b>{pinyin[current].join(', ')}</b></div>\n        <div className=\"d-flex f-center my-xss\">\n          <Writer key={[current, hanzi[current]].join('')} className=\"bg-light b-1\" showOutline={showOutline} character={hanzi[current]} size={256} quiz onQuizComplete={markAsComplete} />\n        </div>\n      </div>\n      <div className=\"my-lg\">\n        <Button block onClick={next} disabled={!isComplete}>Next Character</Button>\n      </div>\n    </div>\n  );\n};\n","import { HomeFilled, GithubFilled } from '@ant-design/icons';\nimport { Card } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Title from 'antd/lib/typography/Title';\nimport React from 'react';\n\nexport const AboutPage = () => {\n  return (\n    <div>\n      <Card className=\"my-md\">\n        <Title>Recall Chinese</Title>\n        <Title level={2}>About Recall Chinese</Title>\n        <Paragraph>\n          Recall Chinese is an app created to help the creator learn Chinese, and hopefully will help others too.\n          Currently this app only randomize word that the creator learned already.\n        </Paragraph>\n        <Paragraph>\n          This app is powered by a lot of amazing open-source projects:\n          <ul>\n            <li>\n              Pinyin &amp; Translations:<br />\n              <a href=\"https://github.com/skishore/makemeahanzi\"><GithubFilled /></a>&nbsp;\n            </li>\n            <li>\n              Graphic Data:<br />\n              <a href=\"https://github.com/chanind/hanzi-writer-data\"><GithubFilled /></a>&nbsp;\n            </li>\n            <li>\n              Writer:<br />\n              <a href=\"https://hanziwriter.org/\"><HomeFilled /></a>&nbsp;\n              <a href=\"https://github.com/chanind/hanzi-writer\"><GithubFilled /></a>&nbsp;\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Features</Title>\n        <Paragraph>\n          <ul>\n            <li>\n              <b>Randomize words</b>\n              : currently randomized based on words/phrases that the creator already know, inserted manually.\n            </li>\n            <li>\n              <b>List of KangXi Radicals</b>\n              : to help remember common pattern of the words and also show which words you know use the radicals.\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Upcoming Features</Title>\n        <Paragraph>\n          <ul>\n            <li>\n              <b>List of randomizable words</b>\n              :\n            </li>\n            <li>\n              <b>Select randomizable words</b>\n              : No more mine. Let's make your own dictionary.\n            </li>\n            <li>\n              <b>Statistics</b>\n              : Show which word you need to show the outline, number mistakes compared to total strokes, etc.\n              The more mistakes, the more randomizer pick the word again\n            </li>\n          </ul>\n        </Paragraph>\n      </Card>\n      <Card className=\"my-md\">\n        <Title level={2}>About The Creator</Title>\n        <Paragraph>\n          Hi there! I'm Darwin, an Indonesian based front-end developer.\n          Due to COVID-19, I have nothing to do at home outside work, sleep, and sometimes play mobile games.\n          (Thankfully I'm lucky enough I don't lose job though.)\n          So, I set a lot of goals on these times at home. One of them is to learn Chinese language.\n          By the way, I'm Chinese by blood and I also have Chinese name given by my parents: 李金永.\n          But I can't speak Chinese (in any dialect) at all. :p\n          My parents used to speak Hakka dialect between them, so at least I can hear some common words. :D\n        </Paragraph>\n        <Paragraph>\n          On my journey of learning Chinese language, I have difficulty trying to read a lot of characters that I actually learned before.\n          So I created this app to help myself recall Chinese characters I learned.\n          Hopefully this app will help me a lot in recalling Chinese characters I learned.\n          If you are interested, I hope this app will help you too!\n        </Paragraph>\n      </Card>\n    </div>\n  );\n};\n","import jsonData from './radicals.json';\n\ninterface Variant {\n  character: string;\n  strokes: number;\n}\n\nexport interface Radical {\n  id: number;\n  variants: Variant[];\n};\n\nexport const radicals: Radical[] = jsonData;\n","import classnames from 'classnames';\nimport React, { FC } from 'react';\n\ninterface InfoProps {\n  title: string;\n  className?: string;\n}\n\nexport const Info: FC<InfoProps> = ({ title, className, children }) => {\n  return (\n    <div className={classnames(\"my-xs\", className)}>\n      <div className=\"text-light\">{title}:</div>\n      {children}\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport { Card } from 'antd';\n\nimport { dictionary } from '../data/dictionary';\nimport { Radical } from '../data/radicals';\nimport { knownWords } from '../data/data';\nimport { Info } from './Info';\n\ninterface RadicalCardProps {\n  radical: Radical;\n  className?: string;\n}\n\nexport const RadicalCard: FC<RadicalCardProps> = ({ className, radical }) => {\n  const mainVariant = radical.variants[0];\n  const otherVariants = radical.variants.slice(1);\n  const allRadicals = radical.variants.map((v) => v.character);\n  const detail = dictionary[mainVariant.character];\n  const knownWordsByRadical = knownWords\n    .filter((word) =>\n      word.split('')\n        .reduce<boolean>((included, character) => {\n          return included || allRadicals\n            .reduce<boolean>((included, current) => {\n              return included || character === current || dictionary[character].decomposition.includes(current);\n            }, false);\n        }, false)\n    );\n  return (\n    <Card className={className} title={\n      <div className=\"d-flex\">\n        <div className=\"text-light\">#{radical.id}</div>\n      </div>\n    }>\n      <div className=\"d-flex f-stretch\">\n        <div className=\"hanzi-lg mr-md mb-md\">\n          {mainVariant.character}\n        </div>\n        <div className=\"f-grow\">\n          <div className=\"d-flex\">\n            <Info title=\"Pīnyīn\" className=\"f-grow\">\n              {detail.pinyin.join('; ')}\n            </Info>\n            <Info title=\"Strokes\" className=\"f-grow\">\n              {mainVariant.strokes}\n            </Info>\n          </div>\n          {!!otherVariants.length && (\n            <Info title=\"Variants\">\n              <div className=\"d-flex\">\n                {otherVariants.map((variant) =>\n                  <span key={variant.character} className=\"hanzi-xs\">\n                    {variant.character}\n                  </span>\n                )}\n              </div>\n            </Info>\n          )}\n        </div>\n      </div>\n      <Info title=\"Definition\">\n        {detail.definition}\n      </Info>\n      {!!knownWordsByRadical.length && (\n        <Info title=\"Words in Bank\">\n          {knownWordsByRadical.join('，')}\n        </Info>\n      )}\n    </Card>\n  );\n};\n","import React from 'react';\nimport { radicals } from '../data/radicals';\nimport { RadicalCard } from '../components/RadicalCard';\n\nexport const RadicalsPage = () => {\n  return (\n    <div>\n      {radicals.map((radical) => (\n        <RadicalCard key={radical.id} radical={radical} className=\"my-md\" />\n      ))}\n    </div>\n  );\n}","import classnames from 'classnames';\nimport React, { FC } from 'react';\nimport { dictionary } from '../data/dictionary';\n\ninterface CharacterProps {\n  character: string;\n  className?: string;\n}\n\nexport const Character: FC<CharacterProps> = ({ character, className }) => {\n  return (\n    <div className={classnames(\"text-center m-xss\", className)}>\n      <div>{dictionary[character].pinyin}</div>\n      <div>{character}</div>\n    </div>\n  );\n}","import { Card } from 'antd';\nimport React from 'react';\n\nimport { Character } from '../components/Character';\nimport { Info } from '../components/Info';\nimport { knownWords, knownWordsTranslation } from '../data/data';\n\nexport const WordsBankPage = () => {\n  return (\n    <div className=\"my-md\">\n      {knownWords.map((word) =>\n        <Card key={word} className=\"my-md\">\n          <Info title=\"Phrase\">\n            <div className=\"d-flex mr-md\">\n              {word.split('').map((character, index) => <Character key={index} character={character} />)}\n            </div>\n          </Info>\n          <Info title=\"Definition\">\n            {knownWordsTranslation[word]}\n          </Info>\n        </Card>\n      )}\n    </div>\n  );\n}","import { Button, Drawer, Layout, Menu, Switch } from 'antd';\nimport React, { useState } from 'react';\nimport { Route, Switch as RouteSwitch, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { QuizPage } from './pages/QuizPage';\nimport { AboutPage } from './pages/AboutPage';\nimport { SettingOutlined } from '@ant-design/icons';\nimport { useShowOutlineConfig } from './config/showOutline';\nimport { RadicalsPage } from './pages/RadicalsPage';\nimport { WordsBankPage } from './pages/WordsBankPage';\n\nconst { Header, Content } = Layout;\nexport const App = () => {\n  const location = useLocation();\n  const [showOutline, setShowOutline] = useShowOutlineConfig();\n\n  const [showSettingDrawer, setShowSettingDrawer] = useState(false);\n  const toggleSettingDrawer = () => setShowSettingDrawer((current) => !current);\n\n  return (\n    <Layout className=\"d-flex f-stretch f-column h-100vh\">\n      <Header className=\"sticky d-flex\">\n        <div className=\"f-grow\">\n          <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname]}>\n            <Menu.Item key=\"/\">\n              <Link to=\"/\">\n                Recall\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/radicals\">\n              <Link to=\"/radicals\">\n                Radicals\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/words\">\n              <Link to=\"/words\">\n                Words Bank\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/about\">\n              <Link to=\"/about\">\n                About\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n        <Button type=\"link\" ghost onClick={toggleSettingDrawer} icon={<SettingOutlined />} />\n      </Header>\n      <Content className=\"f-grow px-md\">\n        <Drawer\n          title=\"Settings\"\n          placement=\"right\"\n          closable={false}\n          onClose={toggleSettingDrawer}\n          visible={showSettingDrawer}\n        >\n          <div className=\"d-flex f-between\">\n            Show Outline\n            <Switch title=\"Show Outline\" onChange={setShowOutline} checked={showOutline} />\n          </div>\n        </Drawer>\n        <Route>\n          <RouteSwitch>\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/radicals\" component={RadicalsPage} />\n            <Route path=\"/words\" component={WordsBankPage} />\n            <Route path=\"/\" component={QuizPage} />\n          </RouteSwitch>\n        </Route>\n      </Content>\n    </Layout>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { LocalStorageProvider } from './Storage';\n\nexport const AppProvider: FC = ({ children }) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <LocalStorageProvider>\n        {children}\n      </LocalStorageProvider>\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App, AppProvider } from './app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}