{"version":3,"sources":["app/components/Writer.tsx","app/data/data.ts","app/data/dictionary.ts","app/Storage.tsx","app/hooks.ts","app/QuizRecord.tsx","app/helpers/math.ts","app/pages/StatisticsPage/calculateStatistics.ts","app/pages/QuizPage.tsx","app/data/DataProvider.ts","app/pages/AboutPage.tsx","app/data/radicals.ts","app/components/Info.tsx","app/components/RadicalCard.tsx","app/pages/RadicalsPage.tsx","app/components/Character.tsx","app/pages/WordsBankPage.tsx","app/helpers/formatter.ts","app/pages/StatisticsPage/CharacterDetailSummary.tsx","app/pages/StatisticsPage/CharacterSummaryTable.tsx","app/pages/StatisticsPage/StatisticsPage.tsx","app/App.tsx","app/AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["Writer","svgRef","createRef","hanziWriter","this","current","Error","props","character","showOutline","size","quiz","HanziWriter","create","width","height","padding","showCharacter","drawingWidth","beginQuiz","syncOutline","hideOutline","onComplete","summary","onCorrectStroke","strokeData","onMistake","highlightOnComplete","leniency","showHintAfterMisses","className","ref","Component","knownWordsTranslation","knownWords","Object","keys","dictionary","reduce","result","word","split","forEach","createContextWithHook","StorageContext","useStorageContext","LOCAL_STORAGE_AVAILBLE","localStorage","LocalStorageProvider","storageKey","children","useState","data","getItem","JSON","parse","get","setData","setAndSaveData","newData","setItem","stringify","save","Provider","value","key","removeItem","clear","useStorage","defaultValue","storage","useRecorder","initialValue","records","setRecords","saveRecord","newRecords","timestamp","Date","getTime","reset","useQuizRecords","useQuizRecorder","startTime","setStartTime","resetRecord","isPeeking","useTimer","peeks","startPeeking","endPeeking","clearPeeks","mistakes","recordMistake","clearMistakes","correctStrokes","recordCorrectStroke","clearCorrectStrokes","setStorage","record","useStoredRecorder","recordQuiz","isComplete","setIsComplete","listener","strokeNum","peek","roundDecimal","x","decimals","modifier","pow","power","Math","round","sumBy","sum","map","select","items","lastItem","array","length","randomItem","floor","random","calculateStatisticSummary","statisticsPerQuiz","recordsGroupedPerCharacter","statistics","push","timeStarted","min","Infinity","accuracyFactors","accuracy","timeTaken","mistakeCount","peekCount","peekTime","calculateStatisticPerRecord","groupRecordsByCharacter","characterSummaries","entries","statistic","calculateStatisticPerCharacter","quizCount","characterCount","familiarityDistribution","calculateFamiliarityDistribution","alien","forgotten","familiar","remember","sumMistakeCount","sumPeekCount","sumPeekTime","sumTimeTaken","sumAccuracy","perfectQuizCount","filter","quizStatistic","mistakesAveragePerQuiz","peekCountAveragePerQuiz","peekTimeAveragePerQuiz","timeTakenAveragePerQuiz","QuizPage","setWord","hanzi","pinyin","char","newHanzi","find","useWord","meaning","randomize","setCurrent","level","part","join","disabled","onMouseDown","onMouseLeave","onMouseUp","icon","EyeFilled","EyeInvisibleFilled","type","onClick","newCurrent","AboutPage","shape","href","GithubFilled","HomeFilled","LinkedinFilled","InstagramFilled","TwitterOutlined","radicals","Info","title","classnames","RadicalCard","radical","mainVariant","variants","otherVariants","slice","allRadicals","v","detail","knownWordsByRadical","included","decomposition","includes","id","strokes","variant","definition","RadicalsPage","Character","WordsBankPage","index","renderPercent","DETAIL_COLUMN","dataIndex","render","moment","locale","format","align","CharacterDetailSummary","words","dataSource","columns","pagination","SUMMARY_COLUMN","defaultSortOrder","sorter","a","b","sortDirections","text","color","confirm","undefined","content","maskClosable","okCancel","ExpandOutlined","CharacterSummariesTable","pageSize","hideOnSinglePage","StatisticsPage","Header","Content","App","location","useLocation","theme","mode","selectedKeys","pathname","Item","to","path","component","AppProvider","basename","process","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76ecee62.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport HanziWriter, { SummaryData, StrokeData } from 'hanzi-writer';\n\ninterface WriterProps {\n  size: number;\n  character: string;\n  showOutline?: boolean;\n  className?: string;\n  quiz?: boolean;\n  onComplete?: (summary: SummaryData) => void;\n  onCorrectStroke?: (strokeData: StrokeData) => void;\n  onMistake?: (strokeData: StrokeData) => void;\n}\n\n// lazy to think about avoiding stale closure problem\nexport class Writer extends Component<WriterProps> {\n  svgRef = createRef<SVGSVGElement>();\n  hanziWriter: HanziWriter | null = null;\n\n  componentDidMount() {\n    if (!this.svgRef.current) {\n      throw new Error('cannot find SVG ref');\n    }\n    const { character, showOutline, size, quiz } = this.props;\n    this.hanziWriter = HanziWriter.create(this.svgRef.current, character, {\n      width: size,\n      height: size,\n      padding: size / 10,\n      showOutline,\n      showCharacter: !quiz,\n      drawingWidth: 32\n    });\n    if (quiz) {\n      this.beginQuiz();\n    }\n  }\n\n  componentDidUpdate() {\n    this.syncOutline();\n  }\n\n  syncOutline() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    const { showOutline } = this.props;\n    if (showOutline) {\n      this.hanziWriter.showOutline();\n    } else {\n      this.hanziWriter.hideOutline();\n    }\n\n  }\n\n  beginQuiz() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    this.hanziWriter.quiz({\n      onComplete: (summary) => {\n        if (this.props.onComplete) {\n          this.props.onComplete(summary);\n        }\n      },\n      onCorrectStroke: (strokeData) => {\n        if (this.props.onCorrectStroke) {\n          this.props.onCorrectStroke(strokeData);\n        }\n      },\n      onMistake: (strokeData) => {\n        if (this.props.onMistake) {\n          this.props.onMistake(strokeData);\n        }\n      },\n\n      highlightOnComplete: true,\n      leniency: 1,\n      showHintAfterMisses: true\n    });\n  }\n\n  render() {\n    const { size, className } = this.props;\n    return <svg ref={this.svgRef} width={size} height={size} className={className} />;\n  }\n}\n","import jsonData from './data.json';\n\nexport const knownWordsTranslation: Dictionary<string> = jsonData;\nexport const knownWords = Object.keys(knownWordsTranslation);\nexport const knownCharacters = Object.keys(\n  knownWords.reduce<Dictionary<boolean>>((result, word) => {\n    word.split('').forEach((character) => {\n      result[character] = true;\n    });\n    return result;\n  }, {})\n);\n","import jsonData from './dictionary.json';\nexport interface DictionaryData {\n  definition: string;\n  pinyin: string[],\n  decomposition: string;\n  radical: string;\n};\n\nexport const dictionary: Dictionary<DictionaryData> = jsonData;","import { createContextWithHook } from 'react-maid';\nimport React, { FC, useState } from 'react';\n\ninterface Storage {\n  clear: () => void;\n  setItem: (key: string, value: any) => void;\n  getItem: (key: string) => any;\n  removeItem: (key: string) => any;\n}\n\nconst [StorageContext, useStorageContext] = createContextWithHook<Storage>(\n  'StorageContext'\n);\n\ninterface LocalStorageProviderProps {\n  storageKey?: string;\n}\n\nconst LOCAL_STORAGE_AVAILBLE = typeof localStorage !== 'undefined';\nfunction save(storageKey: string, data: any) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    localStorage.setItem(storageKey, JSON.stringify(data));\n  }\n}\nfunction get(storageKey: string) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    const data = localStorage.getItem(storageKey);\n    if (data) {\n      return JSON.parse(data);\n    }\n  }\n  return {};\n}\n\nexport const LocalStorageProvider: FC<LocalStorageProviderProps> = ({ storageKey = 'storage', children }) => {\n  const [data, setData] = useState<Dictionary<any>>(() => {\n    return get(storageKey);\n  });\n\n  const setAndSaveData = (newData: any) => {\n    setData(newData);\n    save(storageKey, newData);\n  };\n\n  const setItem = (key: string, value: any) => {\n    setAndSaveData({ ...data, [key]: value });\n  };\n\n  const getItem = (key: string) => {\n    return data[key];\n  };\n\n  const removeItem = (key: string) => {\n    const newData = { ...data };\n    delete newData[key];\n    setAndSaveData(newData);\n  };\n\n  const clear = () => {\n    setAndSaveData({});\n  };\n\n  return (\n    <StorageContext.Provider value={{ setItem, getItem, removeItem, clear }}>\n      {children}\n    </StorageContext.Provider>\n  );\n};\n\nexport function useStorage<T>(key: string): [T | undefined, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue: T): [T, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue?: T): [T, (value: T) => void] {\n  const storage = useStorageContext();\n  const setItem = (value: T) => storage.setItem(key, value);\n  return [storage.getItem(key) || defaultValue, setItem];\n}\n","import { useState } from 'react';\nimport { useStorage } from './Storage';\n\nexport function useToggle(defaultValue = false): [boolean, VoidFunction] {\n  const [toggle, setToggle] = useState<boolean>(defaultValue);\n  return [toggle, () => setToggle((current) => !current)];\n}\n\nexport function useCounter(defaultValue = 0): [number, VoidFunction, VoidFunction] {\n  const [counter, setCounter] = useState<number>(defaultValue);\n  return [counter, () => setCounter((current) => ++current), () => setCounter(defaultValue)];\n}\n\nexport interface Record<T> {\n  timestamp: number;\n  data: T;\n}\n\nexport function useRecorder<T>(initialValue: Record<T>[] = []): [Record<T>[], (record: T) => Record<T>[], VoidFunction] {\n  const [records, setRecords] = useState<Record<T>[]>(initialValue);\n\n  const saveRecord = (data: T) => {\n    const record: Record<T> = {\n      timestamp: new Date().getTime(),\n      data,\n    }\n    const newRecords = [record, ...records];\n    setRecords(newRecords);\n\n    return newRecords;\n  };\n\n  const reset = () => setRecords([]);\n\n  return [records, saveRecord, reset];\n}\n\nexport function useTimer(): [boolean, Record<number>[], VoidFunction, VoidFunction, VoidFunction] {\n  const [startTime, setStartTime] = useState(0);\n  const [records, saveRecord, resetRecord] = useRecorder<number>();\n  const isPeeking = startTime !== 0;\n  const start = () => {\n    setStartTime(new Date().getTime());\n  };\n  const end = () => {\n    if (isPeeking) {\n      saveRecord(new Date().getTime() - startTime);\n      setStartTime(0);\n    }\n  };\n  const reset = () => {\n    resetRecord();\n    setStartTime(0);\n  };\n\n  return [isPeeking, records, start, end, reset];\n}\n\nexport function useStoredRecorder<T>(storageKey: string): [Record<T>[], (data: T) => void] {\n  const [storage, setStorage] = useStorage<Record<T>[]>(storageKey);\n  const [records, record] = useRecorder(storage);\n\n  const recordAndSave = (data: T) => {\n    const newRecords = record(data);\n    setStorage(newRecords);\n  };\n\n  return [records, recordAndSave];\n}\n","import { useRecorder, Record, useStoredRecorder, useTimer } from './hooks';\nimport { StrokeData, SummaryData } from 'hanzi-writer';\nimport { useState } from 'react';\nimport { useStorage } from './Storage';\n\nexport interface QuizData {\n  character: string;\n  peeks: Record<number>[];\n  mistakes: Record<number>[];\n  correctStrokes: Record<number>[];\n}\n\nexport type QuizRecords = Record<QuizData>[];\n\nconst QUIZ_STORAGE_KEY = 'QuizData';\n\nexport function useQuizRecords() {\n  return useStorage<QuizRecords>(QUIZ_STORAGE_KEY, []);\n}\n\nexport function useQuizRecorder() {\n  const [isPeeking, peeks, startPeeking, endPeeking, clearPeeks] = useTimer();\n  const [mistakes, recordMistake, clearMistakes] = useRecorder<number>();\n  const [correctStrokes, recordCorrectStroke, clearCorrectStrokes] = useRecorder<number>();\n  const [, recordQuiz] = useStoredRecorder<QuizData>(QUIZ_STORAGE_KEY);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const onCorrectStroke = (summary: StrokeData) => {\n    recordCorrectStroke(summary.strokeNum);\n  };\n  const onMistake = (summary: StrokeData) => {\n    recordMistake(summary.strokeNum);\n  };\n  const onComplete = (summary: SummaryData) => {\n    setIsComplete(true);\n    recordQuiz({\n      character: summary.character,\n      mistakes,\n      correctStrokes,\n      peeks\n    });\n  };\n\n  const reset = () => {\n    setIsComplete(false);\n    clearPeeks();\n    clearMistakes();\n    clearCorrectStrokes();\n  };\n\n  return {\n    listener: { onComplete, onMistake, onCorrectStroke },\n    peek: { isPeeking, startPeeking, endPeeking },\n    reset,\n    isComplete\n  };\n}","export function roundDecimal(x: number, decimals: number) {\n  const modifier = pow(10, decimals);\n  return Math.round(x * modifier) / modifier;\n}\n\nexport function pow(x: number, power: number): number {\n  if (power === 0) {\n    return 1;\n  }\n  return x * pow(x, power - 1);\n}\n\nexport function select<T>(records: T[], key: keyof T) {\n  return records.map((record) => record[key]);\n}\n\nexport function sumBy<T>(records: T[], key: keyof T) {\n  return sum(select(records, key) as unknown as number[]);\n}\n\nexport function sum(items: number[]) {\n  return items.reduce((result, record) => result + record, 0);\n}\n\nexport function avg(items: number[]) {\n  if (items.length === 0) {\n    return 0;\n  }\n  return sum(items) / items.length;\n}\n\nexport function lastItem<T>(array: T[]) {\n  return array[array.length - 1];\n}\n\nexport function randomItem<T>(items: T[]) {\n  const randomIndex = Math.floor(Math.random() * items.length);\n  return items[randomIndex];\n}\n","import { Record } from '../../hooks';\nimport { QuizRecords, QuizData } from '../../QuizRecord';\nimport { StatisticPerQuiz, StatisticPerCharacter, CharacterSummary } from './interfaces';\nimport { lastItem, sumBy } from '../../helpers/math';\n\nexport function calculateStatisticSummary(records: QuizRecords) {\n  const recordsGroupedPerCharacter = groupRecordsByCharacter(records);\n  const characterSummaries = calculateCharacterSummaries(recordsGroupedPerCharacter);\n\n  return {\n    quizCount: records.length,\n    characterCount: characterSummaries.length,\n    characterSummaries,\n    familiarityDistribution: calculateFamiliarityDistribution(characterSummaries)\n  }\n}\n\nfunction calculateFamiliarityDistribution(characterSummaries: CharacterSummary[]) {\n  let alien = 0;\n  let forgotten = 0;\n  let familiar = 0;\n  let remember = 0;\n\n  characterSummaries.forEach((summary) => {\n    const accuracy = summary.statistic.accuracy;\n    if (accuracy < 0.5) {\n      alien++;\n    } else if (accuracy < 0.75) {\n      forgotten++;\n    } else if (accuracy < 0.90) {\n      familiar++;\n    } else {\n      remember++;\n    }\n  });\n\n  return { alien, forgotten, familiar, remember };\n}\n\nfunction groupRecordsByCharacter(records: QuizRecords) {\n  return records.reduce<Dictionary<StatisticPerQuiz[]>>((statistics, record) => {\n    statistics[record.data.character] = statistics[record.data.character] || [];\n    statistics[record.data.character].push(\n      calculateStatisticPerRecord(record)\n    );\n    return statistics;\n  }, {});\n}\n\nfunction calculateCharacterSummaries(statisticsPerQuiz: Dictionary<StatisticPerQuiz[]>): CharacterSummary[] {\n  return Object.entries(statisticsPerQuiz)\n    .map(([character, statisticsPerQuiz]) => {\n      return {\n        character,\n        statistic: calculateStatisticPerCharacter(statisticsPerQuiz),\n        statisticsPerQuiz\n      }\n    });\n}\n\nfunction calculateStatisticPerCharacter(statisticsPerQuiz: StatisticPerQuiz[]): StatisticPerCharacter {\n  const sumMistakeCount = sumBy(statisticsPerQuiz, 'mistakeCount');\n  const sumPeekCount = sumBy(statisticsPerQuiz, 'peekCount');\n  const sumPeekTime = sumBy(statisticsPerQuiz, 'peekTime');\n  const sumTimeTaken = sumBy(statisticsPerQuiz, 'timeTaken');\n  const sumAccuracy = sumBy(statisticsPerQuiz, 'accuracy');\n\n  const perfectQuizCount = statisticsPerQuiz\n    .filter((quizStatistic) => quizStatistic.mistakeCount === 0 && quizStatistic.peekCount === 0)\n    .length;\n  const quizCount: number = statisticsPerQuiz.length;\n\n  return {\n    quizCount,\n    mistakesAveragePerQuiz: sumMistakeCount / quizCount,\n    accuracy: sumAccuracy / quizCount,\n    peekCountAveragePerQuiz: sumPeekCount / quizCount,\n    peekTimeAveragePerQuiz: sumPeekTime / quizCount,\n    timeTakenAveragePerQuiz: sumTimeTaken / quizCount,\n    perfectQuizCount\n  };\n}\n\nfunction calculateStatisticPerRecord(record: Record<QuizData>) {\n  const timeStarted = Math.min(\n    lastItem(record.data.correctStrokes).timestamp,\n    lastItem(record.data.mistakes)?.timestamp || Infinity,\n    lastItem(record.data.peeks)?.timestamp || Infinity,\n  );\n\n  const accuracyFactors =\n    record.data.mistakes.length +\n    record.data.correctStrokes.length +\n    record.data.peeks.length * record.data.correctStrokes.length / 2;\n\n  return {\n    accuracy: record.data.correctStrokes.length / accuracyFactors,\n    timeTaken: record.timestamp - timeStarted,\n    mistakeCount: record.data.mistakes.length,\n    peekCount: record.data.peeks.length,\n    peekTime: sumBy(record.data.peeks, 'data')\n  };\n}\n","import { Button } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Writer } from '../components/Writer';\nimport Title from 'antd/lib/typography/Title';\nimport { useWord } from '../data/DataProvider';\nimport { useQuizRecorder } from '../QuizRecord';\nimport { EyeFilled, EyeInvisibleFilled } from '@ant-design/icons';\n\nexport const QuizPage = () => {\n  const [hanzi, pinyin, meaning, randomize] = useWord();\n  const [current, setCurrent] = useState(0);\n  const { listener, peek, reset, isComplete } = useQuizRecorder();\n  const next = () => {\n    reset();\n    const newCurrent = current + 1;\n    if (newCurrent === hanzi.length) {\n      setCurrent(0);\n      randomize();\n    } else {\n      setCurrent(newCurrent);\n    }\n  };\n  return (\n    <>\n      <div className=\"m-md\">\n        <Title level={2}>Word:</Title>\n        <b>{pinyin.map((part) => part[0]).join(' ')}</b>: {meaning}\n      </div>\n      <div className=\"m-md\">\n        <div className=\"d-flex\">\n          <Title level={2}>Write It Down:</Title>\n        </div>\n        <div className=\"d-flex f-center\"><b>{pinyin[current].join(', ')}</b></div>\n        <div className=\"d-flex f-center my-xss\">\n          <Writer\n            key={[current, hanzi[current]].join('')}\n            className=\"bg-light b-1\"\n            showOutline={peek.isPeeking}\n            character={hanzi[current]}\n            size={256}\n            quiz\n            {...listener}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex mx-md my-lg\">\n        <Button\n          className=\"mr-sm\"\n          disabled={isComplete}\n          onMouseDown={peek.startPeeking}\n          onMouseLeave={peek.endPeeking}\n          onMouseUp={peek.endPeeking}\n          icon={\n            peek.isPeeking ? <EyeFilled /> : <EyeInvisibleFilled />\n          }\n        />\n        <Button type=\"primary\" className=\"f-grow\" onClick={next} disabled={!isComplete}>\n          Next Character\n        </Button>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { knownWordsTranslation, knownWords } from './data';\nimport { dictionary } from './dictionary';\nimport { useQuizRecords } from '../QuizRecord';\nimport { calculateStatisticSummary } from '../pages/StatisticsPage/calculateStatistics';\nimport { randomItem, avg } from '../helpers/math';\n\nexport function useWord(): [string[], string[][], string, () => void] {\n  const [word, setWord] = useState(randomItem(knownWords));\n  const [records] = useQuizRecords();\n\n  const randomize = () => {\n    let newHanzi: string;\n    const summary = calculateStatisticSummary(records);\n    do {\n      newHanzi = randomItem(knownWords);\n      const accuracy = avg(\n        newHanzi.split('').map((character) =>\n          summary.characterSummaries.find((summary) => summary.character === character)?.statistic.accuracy || 0\n        )\n      );\n      // make high accuracy text appear less. add 0.1 to make 100% accuracy still able to appear\n      if (Math.random() + 0.1 < accuracy) {\n        continue;\n      }\n    } while (newHanzi === word);\n    setWord(newHanzi);\n  }\n  const hanzi = word.split('');\n  const pinyin = hanzi.map((char) => dictionary[char].pinyin);\n  return [hanzi, pinyin, knownWordsTranslation[word], randomize];\n}","import { HomeFilled, GithubFilled, LinkedinFilled, InstagramFilled, TwitterOutlined } from '@ant-design/icons';\nimport { Card, Button } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Title from 'antd/lib/typography/Title';\nimport React from 'react';\n\nexport const AboutPage = () => {\n  return (\n    <>\n      <Card className=\"m-md\">\n        <Title>Recall Chinese</Title>\n        <Title level={2}>About Recall Chinese</Title>\n        <Paragraph>\n          Recall Chinese is an app created to help the creator learn Chinese, and hopefully will help others too.\n          Currently this app only randomize word that the creator learned already.\n        </Paragraph>\n        <Paragraph>\n          This app integrates various amazing open-source projects:\n          <ul>\n            <li>\n              <div className=\"mt-sm mb-xss\">Pinyin &amp; Translations:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/skishore/makemeahanzi\" icon={<GithubFilled />} />\n            </li>\n            <li>\n              <div className=\"mt-sm mb-xss\">Graphic Data:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/chanind/hanzi-writer-data\" icon={<GithubFilled />} />\n            </li>\n            <li>\n              <div className=\"mt-sm mb-xss\">Writer:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/chanind/hanzi-writer\" icon={<GithubFilled />} />\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://hanziwriter.org/\" icon={<HomeFilled />} />\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Features</Title>\n        <Paragraph>\n          <ul>\n            <li>\n              <b>Randomize Words: </b>\n              currently randomized based on words/phrases that the creator already know, inserted manually.\n              The lower the accuracy, the more chance randomizer will pick the word again.\n            </li>\n            <li>\n              <b>Peek Word: </b>\n              Take a peek if of the character if you forget how it looks like.\n            </li>\n            <li>\n              <b>List of KangXi Radicals: </b>\n              to help remember common pattern of the words and also show which words you know use the radicals.\n            </li>\n            <li>\n              <b>Words Bank: </b>\n              List of words/phrases inserted manually by the creator.\n            </li>\n            <li>\n              <b>Statistics: </b>\n              Show which word you need to show the outline, number mistakes compared to total strokes, etc.\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Possible Future Implementation</Title>\n        <Paragraph>\n          I still have some more ideas to build, but I'm not sure if I have enough motivation to implement more.\n          Because right now it is already fit for my needs. But I may change my mind anytime.\n          <ul>\n            <li>\n              <b>Use HSK 1-6 word, selectable by level</b>\n              No more mine (Currently HSK 2-3). Pick your level.\n            </li>\n            <li>\n              <b>Implement Server Side: </b>\n              Prevent statistic loss due to out of memory. Currently saved in a limited space in browser.\n            </li>\n            <li>\n              <b>Pinyin tone change for multi-character words: </b>\n              Not sure if there is someone who has implemented it.\n            </li>\n          </ul>\n        </Paragraph>\n      </Card>\n      <Card className=\"m-md\">\n        <Title level={2}>About The Creator</Title>\n        <Paragraph>\n          Hi there! I'm Darwin, an Indonesian based front-end developer.\n          Due to COVID-19, I have nothing to do at home outside work, sleep, and sometimes play mobile games.\n          (Thankfully I'm lucky enough I don't lose job though.)\n          So, I set a lot of goals on these times at home. One of them is to learn Chinese language.\n          By the way, I'm Chinese by blood and I also have Chinese name given by my parents: 李金永.\n          But I can't speak Chinese (in any dialect) at all. :p\n          My parents used to speak Hakka dialect between them, so at least I can hear some common words. :D\n        </Paragraph>\n        <Paragraph>\n          On my journey of learning Chinese language, I have difficulty trying to read a lot of characters that I actually learned before.\n          So I created this app to help myself recall Chinese characters I learned.\n          Hopefully this app will help me a lot in recalling Chinese characters I learned.\n          If you are interested, I hope this app will help you too!\n        </Paragraph>\n        <Paragraph>\n          Get in touch with me:\n          <div className=\"my-sm\">\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://www.linkedin.com/in/darwingautalius/\" icon={<LinkedinFilled />} />\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://instagram.com/darwin.gautalius\" icon={<InstagramFilled />} />\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://twitter.com/darwingautalius\" icon={<TwitterOutlined />} />\n          </div>\n        </Paragraph>\n      </Card>\n    </>\n  );\n};\n","import jsonData from './radicals.json';\n\ninterface Variant {\n  character: string;\n  strokes: number;\n}\n\nexport interface Radical {\n  id: number;\n  variants: Variant[];\n};\n\nexport const radicals: Radical[] = jsonData;\n","import classnames from 'classnames';\nimport React, { FC } from 'react';\n\ninterface InfoProps {\n  title: string;\n  className?: string;\n}\n\nexport const Info: FC<InfoProps> = ({ title, className, children }) => {\n  return (\n    <div className={classnames(\"my-xs\", className)}>\n      <div className=\"text-light\">{title}:</div>\n      {children}\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport { Card } from 'antd';\n\nimport { dictionary } from '../data/dictionary';\nimport { Radical } from '../data/radicals';\nimport { knownWords } from '../data/data';\nimport { Info } from './Info';\n\ninterface RadicalCardProps {\n  radical: Radical;\n  className?: string;\n}\n\nexport const RadicalCard: FC<RadicalCardProps> = ({ className, radical }) => {\n  const mainVariant = radical.variants[0];\n  const otherVariants = radical.variants.slice(1);\n  const allRadicals = radical.variants.map((v) => v.character);\n  const detail = dictionary[mainVariant.character];\n  const knownWordsByRadical = knownWords\n    .filter((word) =>\n      word.split('')\n        .reduce<boolean>((included, character) => {\n          return included || allRadicals\n            .reduce<boolean>((included, current) => {\n              return included || character === current || dictionary[character].decomposition.includes(current);\n            }, false);\n        }, false)\n    );\n  return (\n    <Card className={className} title={\n      <div className=\"d-flex\">\n        <div className=\"text-light\">#{radical.id}</div>\n      </div>\n    }>\n      <div className=\"d-flex f-stretch\">\n        <div className=\"hanzi-lg mr-md mb-md\">\n          {mainVariant.character}\n        </div>\n        <div className=\"f-grow\">\n          <div className=\"d-flex\">\n            <Info title=\"Pīnyīn\" className=\"f-grow\">\n              {detail.pinyin.join('; ')}\n            </Info>\n            <Info title=\"Strokes\" className=\"f-grow\">\n              {mainVariant.strokes}\n            </Info>\n          </div>\n          {!!otherVariants.length && (\n            <Info title=\"Variants\">\n              <div className=\"d-flex\">\n                {otherVariants.map((variant) =>\n                  <span key={variant.character} className=\"hanzi-xs\">\n                    {variant.character}\n                  </span>\n                )}\n              </div>\n            </Info>\n          )}\n        </div>\n      </div>\n      <Info title=\"Definition\">\n        {detail.definition}\n      </Info>\n      {!!knownWordsByRadical.length && (\n        <Info title=\"Words in Bank\">\n          {knownWordsByRadical.join('，')}\n        </Info>\n      )}\n    </Card>\n  );\n};\n","import React from 'react';\nimport { radicals } from '../data/radicals';\nimport { RadicalCard } from '../components/RadicalCard';\n\nexport const RadicalsPage = () => {\n  return (\n    <>\n      {radicals.map((radical) => (\n        <RadicalCard key={radical.id} radical={radical} className=\"m-md\" />\n      ))}\n    </>\n  );\n}","import classnames from 'classnames';\nimport React, { FC } from 'react';\nimport { dictionary } from '../data/dictionary';\n\ninterface CharacterProps {\n  character: string;\n  className?: string;\n}\n\nexport const Character: FC<CharacterProps> = ({ character, className }) => {\n  return (\n    <div className={classnames(\"text-center mx-xss\", className)}>\n      <div>{dictionary[character].pinyin}</div>\n      <div>{character}</div>\n    </div>\n  );\n}","import { Card } from 'antd';\nimport React from 'react';\n\nimport { Character } from '../components/Character';\nimport { Info } from '../components/Info';\nimport { knownWords, knownWordsTranslation } from '../data/data';\n\nexport const WordsBankPage = () => {\n  return (\n    <>\n      {knownWords.map((word) =>\n        <Card key={word} className=\"m-md\">\n          <Info title=\"Phrase\">\n            <div className=\"d-flex mr-md\">\n              {word.split('').map((character, index) => <Character key={index} character={character} />)}\n            </div>\n          </Info>\n          <Info title=\"Definition\">\n            {knownWordsTranslation[word]}\n          </Info>\n        </Card>\n      )}\n    </>\n  );\n}","import moment from 'moment';\nimport { roundDecimal } from './math';\n\nexport function renderPercent(x: number) {\n  const percent = x * 100;\n  return roundDecimal(percent, 1) + '%';\n}\n\nexport function renderDate(x: number) {\n  return moment(x).locale('zh_cn').format('lll');\n}\n\nexport function renderDuration(x: number) {\n  return roundDecimal(x / 1000, 2) + 's';\n}\n","import React, { FC } from 'react';\nimport { StatisticPerQuiz, CharacterSummary } from './interfaces';\nimport { Info } from '../../components/Info';\nimport { Table } from 'antd';\nimport { ColumnType } from 'antd/lib/table';\nimport { renderDate, renderPercent, renderDuration } from '../../helpers/formatter';\nimport { knownWords } from '../../data/data';\nimport { dictionary } from '../../data/dictionary';\n\nconst DETAIL_COLUMN: ColumnType<StatisticPerQuiz>[] = [\n  {\n    title: 'Date',\n    dataIndex: 'timestamp',\n    render: renderDate,\n  },\n  {\n    title: 'Mistakes',\n    dataIndex: 'mistakeCount',\n    align: 'right'\n  },\n  {\n    title: 'Peeks',\n    dataIndex: 'peekCount',\n    align: 'right'\n  },\n  {\n    title: 'Accuracy',\n    dataIndex: 'accuracy',\n    render: renderPercent\n  }\n];\n\ninterface Props {\n  summary: CharacterSummary;\n}\n\nexport const CharacterDetailSummary: FC<Props> = ({ summary }) => {\n  const words = knownWords.filter((word) => word.includes(summary.character));\n  return (\n    <>\n      <div className=\"d-flex mb-md\">\n        <div className=\"hanzi-md\">{summary.character}</div>\n      </div>\n      <div className=\"my-md\">\n        <Info title=\"Pīnyīn\">\n          {dictionary[summary.character].pinyin}\n        </Info>\n        <Info title=\"Definition\">\n          {dictionary[summary.character].definition}\n        </Info>\n        <Info title=\"Words in Bank\">\n          <div className=\"d-flex\">\n            {words.join(', ')}\n          </div>\n        </Info>\n      </div>\n      <div className=\"my-md\">\n        <div className=\"d-flex my-xs f-wrap\">\n          <Info title=\"Quiz Taken\" className=\"f-grow f-33\">\n            {summary.statistic.quizCount}\n          </Info>\n          <Info title=\"Perfect Count\" className=\"f-grow f-33\">\n            {summary.statistic.perfectQuizCount}\n          </Info>\n          <Info title=\"Avg. Time Taken\" className=\"f-grow f-33\">\n            {renderDuration(summary.statistic.timeTakenAveragePerQuiz)}\n          </Info>\n          <Info title=\"Avg. Peek Count\" className=\"f-grow f-33\">\n            {summary.statistic.peekCountAveragePerQuiz}\n          </Info>\n          <Info title=\"Avg. Mistakes\" className=\"f-grow f-33\">\n            {summary.statistic.mistakesAveragePerQuiz}\n          </Info>\n          <Info title=\"Accuracy\" className=\"f-grow f-33\">\n            {renderPercent(summary.statistic.accuracy)}\n          </Info>\n        </div>\n      </div>\n      <Table size=\"small\" dataSource={summary.statisticsPerQuiz} columns={DETAIL_COLUMN} pagination={false} />\n    </>\n  );\n}\n","import { ExpandOutlined } from '@ant-design/icons';\nimport { Table, Modal, Button } from 'antd';\nimport { ColumnType } from 'antd/lib/table';\nimport React, { FC } from 'react';\n\nimport { CharacterDetailSummary } from './CharacterDetailSummary';\nimport { renderPercent } from '../../helpers/formatter';\nimport { CharacterSummary } from './interfaces';\n\nconst SUMMARY_COLUMN: ColumnType<CharacterSummary>[] = [\n  {\n    title: '字',\n    dataIndex: 'character',\n    align: 'center',\n  },\n  {\n    title: 'Quiz Taken',\n    dataIndex: ['statistic', 'quizCount'],\n    key: 'statistic.quizCount',\n    align: 'right'\n  },\n  {\n    title: 'Perfect Count',\n    dataIndex: ['statistic', 'perfectQuizCount'],\n    align: 'right'\n  },\n  {\n    title: 'Avg. Accuracy',\n    dataIndex: ['statistic', 'accuracy'],\n    key: 'statistic.accuracy',\n    align: 'right',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.statistic.accuracy - b.statistic.accuracy,\n    sortDirections: ['ascend', 'descend'],\n    render: renderPercent,\n  },\n  {\n    title: '',\n    key: 'action',\n    render: (text, record) => {\n      const showDetail = () => {\n        return Modal.confirm({\n          type: undefined,\n          content: <CharacterDetailSummary summary={record} />,\n          maskClosable: true,\n          okCancel: false\n        });\n      };\n      return (\n        <Button type=\"link\" color=\"default\" onClick={showDetail} icon={<ExpandOutlined />} />\n      );\n    },\n  },\n];\n\ninterface Props {\n  characterSummaries: CharacterSummary[];\n}\n\nexport const CharacterSummariesTable: FC<Props> = ({ characterSummaries: statistics }) => {\n  return (\n    <Table size=\"small\" pagination={{ pageSize: 50, hideOnSinglePage: true }} dataSource={statistics} columns={SUMMARY_COLUMN} />\n  );\n};\n","import React from 'react';\n\nimport { Info } from '../../components/Info';\nimport { useQuizRecords } from '../../QuizRecord';\nimport { calculateStatisticSummary } from './calculateStatistics';\nimport { CharacterSummariesTable } from './CharacterSummaryTable';\n\nexport const StatisticsPage = () => {\n  const [quizRecords] = useQuizRecords();\n  const summary = calculateStatisticSummary(quizRecords);\n\n  return (\n    <>\n      <div className=\"m-md\">\n        <div className=\"d-flex m-xs\">\n          <Info title=\"Quiz Taken\" className=\"f-grow f-50\">\n            {summary.quizCount}\n          </Info>\n          <Info title=\"Characters Written\" className=\"f-grow f-50\">\n            {summary.characterCount}\n          </Info>\n        </div>\n        <div className=\"d-flex m-xs\">\n          <Info title=\"Alien\" className=\"f-grow f-25\">\n            {summary.familiarityDistribution.alien}\n          </Info>\n          <Info title=\"Forgotten\" className=\"f-grow f-25\">\n            {summary.familiarityDistribution.forgotten}\n          </Info>\n          <Info title=\"Familiar\" className=\"f-grow f-25\">\n            {summary.familiarityDistribution.familiar}\n          </Info>\n          <Info title=\"Remember\" className=\"f-grow f-25\">\n            {summary.familiarityDistribution.remember}\n          </Info>\n        </div>\n      </div>\n      <div className=\"my-md\">\n        <CharacterSummariesTable characterSummaries={summary.characterSummaries} />\n      </div>\n    </>\n  );\n}\n","import { Layout, Menu } from 'antd';\nimport React from 'react';\nimport { Route, Switch as RouteSwitch, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { QuizPage } from './pages/QuizPage';\nimport { AboutPage } from './pages/AboutPage';\nimport { RadicalsPage } from './pages/RadicalsPage';\nimport { WordsBankPage } from './pages/WordsBankPage';\nimport { StatisticsPage } from './pages/StatisticsPage';\n\nconst { Header, Content } = Layout;\nexport const App = () => {\n  const location = useLocation();\n  return (\n    <Layout className=\"d-flex f-stretch f-column h-100vh\">\n      <Header className=\"sticky d-flex\">\n        <div className=\"f-grow\">\n          <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname]}>\n            <Menu.Item key=\"/\">\n              <Link to=\"/\">\n                Recall\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/statistics\">\n              <Link to=\"/statistics\">\n                Statistics\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/words\">\n              <Link to=\"/words\">\n                Words Bank\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/radicals\">\n              <Link to=\"/radicals\">\n                Radicals\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/about\">\n              <Link to=\"/about\">\n                About\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </Header>\n      <Content className=\"f-grow\">\n        <Route>\n          <RouteSwitch>\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/statistics\" component={StatisticsPage} />\n            <Route path=\"/words\" component={WordsBankPage} />\n            <Route path=\"/radicals\" component={RadicalsPage} />\n            <Route path=\"/\" component={QuizPage} />\n          </RouteSwitch>\n        </Route>\n      </Content>\n    </Layout>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { LocalStorageProvider } from './Storage';\n\nexport const AppProvider: FC = ({ children }) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <LocalStorageProvider>\n        {children}\n      </LocalStorageProvider>\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App, AppProvider } from './app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}