{"version":3,"sources":["app/components/Writer.tsx","app/data/data.ts","app/data/dictionary.ts","app/data/DataProvider.ts","app/Storage.tsx","app/hooks.ts","app/QuizRecord.tsx","app/pages/QuizPage.tsx","app/pages/AboutPage.tsx","app/data/radicals.ts","app/components/Info.tsx","app/components/RadicalCard.tsx","app/pages/RadicalsPage.tsx","app/components/Character.tsx","app/pages/WordsBankPage.tsx","app/pages/StatisticsPage.tsx","app/App.tsx","app/AppProvider.tsx","serviceWorker.ts","index.tsx"],"names":["Writer","svgRef","createRef","hanziWriter","this","current","Error","props","character","showOutline","size","quiz","HanziWriter","create","width","height","padding","showCharacter","drawingWidth","beginQuiz","syncOutline","hideOutline","onComplete","summary","onCorrectStroke","strokeData","onMistake","highlightOnComplete","leniency","showHintAfterMisses","className","ref","Component","knownWordsTranslation","knownWords","Object","keys","dictionary","reduce","result","word","split","forEach","randomItem","items","Math","floor","random","length","createContextWithHook","StorageContext","useStorageContext","LOCAL_STORAGE_AVAILBLE","localStorage","LocalStorageProvider","storageKey","children","useState","data","getItem","JSON","parse","get","setData","setAndSaveData","newData","setItem","stringify","save","Provider","value","key","removeItem","clear","useStorage","defaultValue","storage","useRecorder","initialValue","records","setRecords","saveRecord","newRecords","timestamp","Date","getTime","reset","useQuizRecorder","startTime","setStartTime","resetRecord","isPeeking","useTimer","peeks","startPeeking","endPeeking","clearPeeks","mistakes","recordMistake","clearMistakes","correctStrokes","recordCorrectStroke","clearCorrectStrokes","setStorage","record","useStoredRecorder","recordQuiz","isComplete","setIsComplete","listener","strokeNum","peek","QuizPage","setWord","hanzi","pinyin","map","char","newHanzi","useWord","meaning","randomize","setCurrent","level","part","join","disabled","onMouseDown","onMouseLeave","onMouseUp","icon","EyeFilled","EyeInvisibleFilled","type","onClick","newCurrent","AboutPage","shape","href","GithubFilled","HomeFilled","LinkedinFilled","InstagramFilled","TwitterOutlined","radicals","Info","title","classnames","RadicalCard","radical","mainVariant","variants","otherVariants","slice","allRadicals","v","detail","knownWordsByRadical","filter","included","decomposition","includes","id","strokes","variant","definition","RadicalsPage","Character","WordsBankPage","index","roundDecimal","x","decimals","modifier","pow","power","round","renderPercent","renderDuration","DETAIL_COLUMN","dataIndex","render","moment","locale","format","align","SUMMARY_COLUMN","defaultSortOrder","sorter","a","b","statistic","accuracy","sortDirections","text","confirm","undefined","content","quizCount","timeTakenAveragePerQuiz","peekCountAveragePerQuiz","peekTimeAveragePerQuiz","mistakesAveragePerQuiz","dataSource","statisticsPerQuiz","columns","pagination","MoreOutlined","StatisticsPage","statistics","push","timeStarted","min","lastItem","Infinity","accuracyVariables","timeTaken","mistakeCount","peekCount","peekTime","sumBy","calculateStatisticPerRecord","entries","calculateStatisticPerCharacter","calculateStatistics","pageSize","hideOnSinglePage","sumMistakeCount","sumPeekCount","sumPeekTime","sumTimeTaken","sumAccuracy","perfectQuizCount","quizStatistic","array","Header","Content","App","location","useLocation","theme","mode","selectedKeys","pathname","Item","to","path","component","AppProvider","basename","process","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1ccfd9f4.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport HanziWriter, { SummaryData, StrokeData } from 'hanzi-writer';\n\ninterface WriterProps {\n  size: number;\n  character: string;\n  showOutline?: boolean;\n  className?: string;\n  quiz?: boolean;\n  onComplete?: (summary: SummaryData) => void;\n  onCorrectStroke?: (strokeData: StrokeData) => void;\n  onMistake?: (strokeData: StrokeData) => void;\n}\n\n// lazy to think about avoiding stale closure problem\nexport class Writer extends Component<WriterProps> {\n  svgRef = createRef<SVGSVGElement>();\n  hanziWriter: HanziWriter | null = null;\n\n  componentDidMount() {\n    if (!this.svgRef.current) {\n      throw new Error('cannot find SVG ref');\n    }\n    const { character, showOutline, size, quiz } = this.props;\n    this.hanziWriter = HanziWriter.create(this.svgRef.current, character, {\n      width: size,\n      height: size,\n      padding: size / 10,\n      showOutline,\n      showCharacter: !quiz,\n      drawingWidth: 32\n    });\n    if (quiz) {\n      this.beginQuiz();\n    }\n  }\n\n  componentDidUpdate() {\n    this.syncOutline();\n  }\n\n  syncOutline() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    const { showOutline } = this.props;\n    if (showOutline) {\n      this.hanziWriter.showOutline();\n    } else {\n      this.hanziWriter.hideOutline();\n    }\n\n  }\n\n  beginQuiz() {\n    if (!this.hanziWriter) {\n      throw new Error('Cannot find instance of HanziWriter');\n    }\n    this.hanziWriter.quiz({\n      onComplete: (summary) => {\n        if (this.props.onComplete) {\n          this.props.onComplete(summary);\n        }\n      },\n      onCorrectStroke: (strokeData) => {\n        if (this.props.onCorrectStroke) {\n          this.props.onCorrectStroke(strokeData);\n        }\n      },\n      onMistake: (strokeData) => {\n        if (this.props.onMistake) {\n          this.props.onMistake(strokeData);\n        }\n      },\n\n      highlightOnComplete: true,\n      leniency: 1,\n      showHintAfterMisses: true\n    });\n  }\n\n  render() {\n    const { size, className } = this.props;\n    return <svg ref={this.svgRef} width={size} height={size} className={className} />;\n  }\n}\n","import jsonData from './data.json';\n\nexport const knownWordsTranslation: Dictionary<string> = jsonData;\nexport const knownWords = Object.keys(knownWordsTranslation);\nexport const knownCharacters = Object.keys(\n  knownWords.reduce<Dictionary<boolean>>((result, word) => {\n    word.split('').forEach((character) => {\n      result[character] = true;\n    });\n    return result;\n  }, {})\n);\n","import jsonData from './dictionary.json';\nexport interface DictionaryData {\n  definition: string;\n  pinyin: string[],\n  decomposition: string;\n  radical: string;\n};\n\nexport const dictionary: Dictionary<DictionaryData> = jsonData;","import { useState } from 'react';\n\nimport { knownWordsTranslation, knownWords } from './data';\nimport { dictionary } from './dictionary';\n\nfunction randomItem<T>(items: T[]) {\n  const randomIndex = Math.floor(Math.random() * items.length);\n  return items[randomIndex];\n}\n\nexport function useWord(): [string[], string[][], string, () => void] {\n  const [word, setWord] = useState(randomItem(knownWords));\n  const randomize = () => {\n    let newHanzi: string;\n    do {\n      newHanzi = randomItem(knownWords);\n    } while (newHanzi === word);\n    setWord(newHanzi);\n  }\n  const hanzi = word.split('');\n  const pinyin = hanzi.map((char) => dictionary[char].pinyin);\n  return [hanzi, pinyin, knownWordsTranslation[word], randomize];\n}","import { createContextWithHook } from 'react-maid';\nimport React, { FC, useState } from 'react';\n\ninterface Storage {\n  clear: () => void;\n  setItem: (key: string, value: any) => void;\n  getItem: (key: string) => any;\n  removeItem: (key: string) => any;\n}\n\nconst [StorageContext, useStorageContext] = createContextWithHook<Storage>(\n  'StorageContext'\n);\n\ninterface LocalStorageProviderProps {\n  storageKey?: string;\n}\n\nconst LOCAL_STORAGE_AVAILBLE = typeof localStorage !== 'undefined';\nfunction save(storageKey: string, data: any) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    localStorage.setItem(storageKey, JSON.stringify(data));\n  }\n}\nfunction get(storageKey: string) {\n  if (LOCAL_STORAGE_AVAILBLE) {\n    const data = localStorage.getItem(storageKey);\n    if (data) {\n      return JSON.parse(data);\n    }\n  }\n  return {};\n}\n\nexport const LocalStorageProvider: FC<LocalStorageProviderProps> = ({ storageKey = 'storage', children }) => {\n  const [data, setData] = useState<Dictionary<any>>(() => {\n    return get(storageKey);\n  });\n\n  const setAndSaveData = (newData: any) => {\n    setData(newData);\n    save(storageKey, newData);\n  };\n\n  const setItem = (key: string, value: any) => {\n    setAndSaveData({ ...data, [key]: value });\n  };\n\n  const getItem = (key: string) => {\n    return data[key];\n  };\n\n  const removeItem = (key: string) => {\n    const newData = { ...data };\n    delete newData[key];\n    setAndSaveData(newData);\n  };\n\n  const clear = () => {\n    setAndSaveData({});\n  };\n\n  return (\n    <StorageContext.Provider value={{ setItem, getItem, removeItem, clear }}>\n      {children}\n    </StorageContext.Provider>\n  );\n};\n\nexport function useStorage<T>(key: string): [T | undefined, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue: T): [T, (value: T) => void];\nexport function useStorage<T>(key: string, defaultValue?: T): [T, (value: T) => void] {\n  const storage = useStorageContext();\n  const setItem = (value: T) => storage.setItem(key, value);\n  return [storage.getItem(key) || defaultValue, setItem];\n}\n","import { useState } from 'react';\nimport { useStorage } from './Storage';\n\nexport function useToggle(defaultValue = false): [boolean, VoidFunction] {\n  const [toggle, setToggle] = useState<boolean>(defaultValue);\n  return [toggle, () => setToggle((current) => !current)];\n}\n\nexport function useCounter(defaultValue = 0): [number, VoidFunction, VoidFunction] {\n  const [counter, setCounter] = useState<number>(defaultValue);\n  return [counter, () => setCounter((current) => ++current), () => setCounter(defaultValue)];\n}\n\nexport interface Record<T> {\n  timestamp: number;\n  data: T;\n}\n\nexport function useRecorder<T>(initialValue: Record<T>[] = []): [Record<T>[], (record: T) => Record<T>[], VoidFunction] {\n  const [records, setRecords] = useState<Record<T>[]>(initialValue);\n\n  const saveRecord = (data: T) => {\n    const record: Record<T> = {\n      timestamp: new Date().getTime(),\n      data,\n    }\n    const newRecords = [record, ...records];\n    setRecords(newRecords);\n\n    return newRecords;\n  };\n\n  const reset = () => setRecords([]);\n\n  return [records, saveRecord, reset];\n}\n\nexport function useTimer(): [boolean, Record<number>[], VoidFunction, VoidFunction, VoidFunction] {\n  const [startTime, setStartTime] = useState(0);\n  const [records, saveRecord, resetRecord] = useRecorder<number>();\n  const isPeeking = startTime !== 0;\n  const start = () => {\n    setStartTime(new Date().getTime());\n  };\n  const end = () => {\n    if (isPeeking) {\n      saveRecord(new Date().getTime() - startTime);\n      setStartTime(0);\n    }\n  };\n  const reset = () => {\n    resetRecord();\n    setStartTime(0);\n  };\n\n  return [isPeeking, records, start, end, reset];\n}\n\nexport function useStoredRecorder<T>(storageKey: string): [Record<T>[], (data: T) => void] {\n  const [storage, setStorage] = useStorage<Record<T>[]>(storageKey);\n  const [records, record] = useRecorder(storage);\n\n  const recordAndSave = (data: T) => {\n    const newRecords = record(data);\n    setStorage(newRecords);\n  };\n\n  return [records, recordAndSave];\n}\n","import { useRecorder, Record, useStoredRecorder, useTimer } from './hooks';\nimport { StrokeData, SummaryData } from 'hanzi-writer';\nimport { useState } from 'react';\nimport { useStorage } from './Storage';\n\nexport interface QuizData {\n  character: string;\n  peeks: Record<number>[];\n  mistakes: Record<number>[];\n  correctStrokes: Record<number>[];\n}\n\nexport type QuizRecords = Record<QuizData>[];\n\nconst QUIZ_STORAGE_KEY = 'QuizData';\n\nexport function useQuizRecords() {\n  return useStorage<QuizRecords>(QUIZ_STORAGE_KEY, []);\n}\n\nexport function useQuizRecorder() {\n  const [isPeeking, peeks, startPeeking, endPeeking, clearPeeks] = useTimer();\n  const [mistakes, recordMistake, clearMistakes] = useRecorder<number>();\n  const [correctStrokes, recordCorrectStroke, clearCorrectStrokes] = useRecorder<number>();\n  const [, recordQuiz] = useStoredRecorder<QuizData>(QUIZ_STORAGE_KEY);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const onCorrectStroke = (summary: StrokeData) => {\n    recordCorrectStroke(summary.strokeNum);\n  };\n  const onMistake = (summary: StrokeData) => {\n    recordMistake(summary.strokeNum);\n  };\n  const onComplete = (summary: SummaryData) => {\n    setIsComplete(true);\n    recordQuiz({\n      character: summary.character,\n      mistakes,\n      correctStrokes,\n      peeks\n    });\n  };\n\n  const reset = () => {\n    setIsComplete(false);\n    clearPeeks();\n    clearMistakes();\n    clearCorrectStrokes();\n  };\n\n  return {\n    listener: { onComplete, onMistake, onCorrectStroke },\n    peek: { isPeeking, startPeeking, endPeeking },\n    reset,\n    isComplete\n  };\n}","import { Button } from 'antd';\nimport React, { useState } from 'react';\n\nimport { Writer } from '../components/Writer';\nimport Title from 'antd/lib/typography/Title';\nimport { useWord } from '../data/DataProvider';\nimport { useQuizRecorder } from '../QuizRecord';\nimport { EyeFilled, EyeInvisibleFilled } from '@ant-design/icons';\n\nexport const QuizPage = () => {\n  const [hanzi, pinyin, meaning, randomize] = useWord();\n  const [current, setCurrent] = useState(0);\n  const { listener, peek, reset, isComplete } = useQuizRecorder();\n  const next = () => {\n    reset();\n    const newCurrent = current + 1;\n    if (newCurrent === hanzi.length) {\n      setCurrent(0);\n      randomize();\n    } else {\n      setCurrent(newCurrent);\n    }\n  };\n  return (\n    <>\n      <div className=\"m-md\">\n        <Title level={2}>Word:</Title>\n        <b>{pinyin.map((part) => part[0]).join(' ')}</b>: {meaning}\n      </div>\n      <div className=\"m-md\">\n        <div className=\"d-flex\">\n          <Title level={2}>Write It Down:</Title>\n        </div>\n        <div className=\"d-flex f-center\"><b>{pinyin[current].join(', ')}</b></div>\n        <div className=\"d-flex f-center my-xss\">\n          <Writer\n            key={[current, hanzi[current]].join('')}\n            className=\"bg-light b-1\"\n            showOutline={peek.isPeeking}\n            character={hanzi[current]}\n            size={256}\n            quiz\n            {...listener}\n          />\n        </div>\n      </div>\n      <div className=\"d-flex mx-md my-lg\">\n        <Button\n          className=\"mr-sm\"\n          disabled={isComplete}\n          onMouseDown={peek.startPeeking}\n          onMouseLeave={peek.endPeeking}\n          onMouseUp={peek.endPeeking}\n          icon={\n            peek.isPeeking ? <EyeFilled /> : <EyeInvisibleFilled />\n          }\n        />\n        <Button type=\"primary\" className=\"f-grow\" onClick={next} disabled={!isComplete}>\n          Next Character\n        </Button>\n      </div>\n    </>\n  );\n};\n","import { HomeFilled, GithubFilled, LinkedinFilled, InstagramFilled, TwitterOutlined } from '@ant-design/icons';\nimport { Card, Button } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Title from 'antd/lib/typography/Title';\nimport React from 'react';\n\nexport const AboutPage = () => {\n  return (\n    <>\n      <Card className=\"m-md\">\n        <Title>Recall Chinese</Title>\n        <Title level={2}>About Recall Chinese</Title>\n        <Paragraph>\n          Recall Chinese is an app created to help the creator learn Chinese, and hopefully will help others too.\n          Currently this app only randomize word that the creator learned already.\n        </Paragraph>\n        <Paragraph>\n          This app integrates various amazing open-source projects:\n          <ul>\n            <li>\n              <div className=\"mt-sm mb-xss\">Pinyin &amp; Translations:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/skishore/makemeahanzi\" icon={<GithubFilled />} />\n            </li>\n            <li>\n              <div className=\"mt-sm mb-xss\">Graphic Data:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/chanind/hanzi-writer-data\" icon={<GithubFilled />} />\n            </li>\n            <li>\n              <div className=\"mt-sm mb-xss\">Writer:</div>\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://github.com/chanind/hanzi-writer\" icon={<GithubFilled />} />\n              <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://hanziwriter.org/\" icon={<HomeFilled />} />\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Features</Title>\n        <Paragraph>\n          <ul>\n            <li>\n              <b>Randomize Words: </b>\n              currently randomized based on words/phrases that the creator already know, inserted manually.\n            </li>\n            <li>\n              <b>Peek Word: </b>\n              Take a peek if of the character if you forget how it looks like.\n            </li>\n            <li>\n              <b>List of KangXi Radicals: </b>\n              to help remember common pattern of the words and also show which words you know use the radicals.\n            </li>\n            <li>\n              <b>Words Bank: </b>\n              List of words/phrases inserted manually by the creator.\n            </li>\n            <li>\n              <b>Statistics: </b>\n              Show which word you need to show the outline, number mistakes compared to total strokes, etc.\n            </li>\n          </ul>\n        </Paragraph>\n        <Title level={3}>Possible Future Implementation</Title>\n        <Paragraph>\n          I still have some more ideas to build, but I'm not sure if I have enough motivation to implement more.\n          Because right now it is already fit for my needs. But I may change my mind anytime.\n          <ul>\n            <li>\n              <b>Randomize words based on priority: </b>\n              The lower the accuracy, the more chance randomizer will pick the word again.\n            </li>\n            <li>\n              <b>Insert/Update/Delete randomizable words: </b>\n              No more mine. Let's make it yours.\n            </li>\n            <li>\n              <b>Implement Server Side: </b>\n              Prevent statistic loss due to out of memory. Currently saved in a limited space in browser.\n            </li>\n            <li>\n              <b>Pinyin tone change for multi-character words: </b>\n              Not sure if there is someone who has implemented it.\n            </li>\n          </ul>\n        </Paragraph>\n      </Card>\n      <Card className=\"m-md\">\n        <Title level={2}>About The Creator</Title>\n        <Paragraph>\n          Hi there! I'm Darwin, an Indonesian based front-end developer.\n          Due to COVID-19, I have nothing to do at home outside work, sleep, and sometimes play mobile games.\n          (Thankfully I'm lucky enough I don't lose job though.)\n          So, I set a lot of goals on these times at home. One of them is to learn Chinese language.\n          By the way, I'm Chinese by blood and I also have Chinese name given by my parents: 李金永.\n          But I can't speak Chinese (in any dialect) at all. :p\n          My parents used to speak Hakka dialect between them, so at least I can hear some common words. :D\n        </Paragraph>\n        <Paragraph>\n          On my journey of learning Chinese language, I have difficulty trying to read a lot of characters that I actually learned before.\n          So I created this app to help myself recall Chinese characters I learned.\n          Hopefully this app will help me a lot in recalling Chinese characters I learned.\n          If you are interested, I hope this app will help you too!\n        </Paragraph>\n        <Paragraph>\n          Get in touch with me:\n          <div className=\"my-sm\">\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://www.linkedin.com/in/darwingautalius/\" icon={<LinkedinFilled />} />\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://instagram.com/darwin.gautalius\" icon={<InstagramFilled />} />\n            <Button type=\"default\" shape=\"circle\" className=\"mr-sm\" href=\"https://twitter.com/darwingautalius\" icon={<TwitterOutlined />} />\n          </div>\n        </Paragraph>\n      </Card>\n    </>\n  );\n};\n","import jsonData from './radicals.json';\n\ninterface Variant {\n  character: string;\n  strokes: number;\n}\n\nexport interface Radical {\n  id: number;\n  variants: Variant[];\n};\n\nexport const radicals: Radical[] = jsonData;\n","import classnames from 'classnames';\nimport React, { FC } from 'react';\n\ninterface InfoProps {\n  title: string;\n  className?: string;\n}\n\nexport const Info: FC<InfoProps> = ({ title, className, children }) => {\n  return (\n    <div className={classnames(\"my-xs\", className)}>\n      <div className=\"text-light\">{title}:</div>\n      {children}\n    </div>\n  );\n}\n","import React, { FC } from 'react';\nimport { Card } from 'antd';\n\nimport { dictionary } from '../data/dictionary';\nimport { Radical } from '../data/radicals';\nimport { knownWords } from '../data/data';\nimport { Info } from './Info';\n\ninterface RadicalCardProps {\n  radical: Radical;\n  className?: string;\n}\n\nexport const RadicalCard: FC<RadicalCardProps> = ({ className, radical }) => {\n  const mainVariant = radical.variants[0];\n  const otherVariants = radical.variants.slice(1);\n  const allRadicals = radical.variants.map((v) => v.character);\n  const detail = dictionary[mainVariant.character];\n  const knownWordsByRadical = knownWords\n    .filter((word) =>\n      word.split('')\n        .reduce<boolean>((included, character) => {\n          return included || allRadicals\n            .reduce<boolean>((included, current) => {\n              return included || character === current || dictionary[character].decomposition.includes(current);\n            }, false);\n        }, false)\n    );\n  return (\n    <Card className={className} title={\n      <div className=\"d-flex\">\n        <div className=\"text-light\">#{radical.id}</div>\n      </div>\n    }>\n      <div className=\"d-flex f-stretch\">\n        <div className=\"hanzi-lg mr-md mb-md\">\n          {mainVariant.character}\n        </div>\n        <div className=\"f-grow\">\n          <div className=\"d-flex\">\n            <Info title=\"Pīnyīn\" className=\"f-grow\">\n              {detail.pinyin.join('; ')}\n            </Info>\n            <Info title=\"Strokes\" className=\"f-grow\">\n              {mainVariant.strokes}\n            </Info>\n          </div>\n          {!!otherVariants.length && (\n            <Info title=\"Variants\">\n              <div className=\"d-flex\">\n                {otherVariants.map((variant) =>\n                  <span key={variant.character} className=\"hanzi-xs\">\n                    {variant.character}\n                  </span>\n                )}\n              </div>\n            </Info>\n          )}\n        </div>\n      </div>\n      <Info title=\"Definition\">\n        {detail.definition}\n      </Info>\n      {!!knownWordsByRadical.length && (\n        <Info title=\"Words in Bank\">\n          {knownWordsByRadical.join('，')}\n        </Info>\n      )}\n    </Card>\n  );\n};\n","import React from 'react';\nimport { radicals } from '../data/radicals';\nimport { RadicalCard } from '../components/RadicalCard';\n\nexport const RadicalsPage = () => {\n  return (\n    <>\n      {radicals.map((radical) => (\n        <RadicalCard key={radical.id} radical={radical} className=\"m-md\" />\n      ))}\n    </>\n  );\n}","import classnames from 'classnames';\nimport React, { FC } from 'react';\nimport { dictionary } from '../data/dictionary';\n\ninterface CharacterProps {\n  character: string;\n  className?: string;\n}\n\nexport const Character: FC<CharacterProps> = ({ character, className }) => {\n  return (\n    <div className={classnames(\"text-center m-xss\", className)}>\n      <div>{dictionary[character].pinyin}</div>\n      <div>{character}</div>\n    </div>\n  );\n}","import { Card } from 'antd';\nimport React from 'react';\n\nimport { Character } from '../components/Character';\nimport { Info } from '../components/Info';\nimport { knownWords, knownWordsTranslation } from '../data/data';\n\nexport const WordsBankPage = () => {\n  return (\n    <>\n      {knownWords.map((word) =>\n        <Card key={word} className=\"m-md\">\n          <Info title=\"Phrase\">\n            <div className=\"d-flex mr-md\">\n              {word.split('').map((character, index) => <Character key={index} character={character} />)}\n            </div>\n          </Info>\n          <Info title=\"Definition\">\n            {knownWordsTranslation[word]}\n          </Info>\n        </Card>\n      )}\n    </>\n  );\n}","import { Table, Button, Modal } from 'antd';\nimport React from 'react';\nimport { useQuizRecords, QuizRecords, QuizData } from '../QuizRecord';\nimport { Record } from '../hooks';\nimport { ColumnType } from 'antd/lib/table';\nimport moment from 'moment';\nimport { MoreOutlined } from '@ant-design/icons';\nimport { Info } from '../components/Info';\n\nfunction pow(x: number, power: number): number {\n  if (power === 0) {\n    return 1;\n  }\n  return x * pow(x, power - 1);\n}\n\nfunction roundDecimal(x: number, decimals: number) {\n  const modifier = pow(10, decimals);\n  return Math.round(x * modifier) / modifier;\n}\n\nfunction renderPercent(x: number) {\n  const percent = x * 100;\n  return roundDecimal(percent, 1) + '%';\n}\n\nfunction renderDate(x: number) {\n  return moment(x).locale('zh_cn').format('lll');\n}\n\nfunction renderDuration(x: number) {\n  return roundDecimal(x / 1000, 2) + 's';\n}\n\nconst DETAIL_COLUMN: ColumnType<StatisticPerQuiz>[] = [\n  {\n    title: 'Date',\n    dataIndex: 'timestamp',\n    render: renderDate,\n  },\n  {\n    title: 'Mistakes',\n    dataIndex: 'mistakeCount',\n    align: 'right'\n  },\n  {\n    title: 'Peeks',\n    dataIndex: 'peekCount',\n    align: 'right'\n  },\n  {\n    title: 'Accuracy',\n    dataIndex: 'accuracy',\n    render: renderPercent\n  }\n]\n\nconst SUMMARY_COLUMN: ColumnType<StatisicRecord>[] = [\n  {\n    title: '字',\n    dataIndex: 'character',\n    align: 'center',\n  },\n  {\n    title: 'Quiz Taken',\n    dataIndex: ['statistic', 'quizCount'],\n    key: 'statistic.quizCount',\n    align: 'right'\n  },\n  {\n    title: 'Perfect Count',\n    dataIndex: ['statistic', 'perfectQuizCount']\n  },\n  {\n    title: 'Avg. Accuracy',\n    dataIndex: ['statistic', 'accuracy'],\n    key: 'statistic.accuracy',\n    align: 'right',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => a.statistic.accuracy - b.statistic.accuracy,\n    sortDirections: ['ascend', 'descend'],\n    render: renderPercent,\n  },\n  {\n    title: '',\n    key: 'action',\n    render: (text, record) => {\n      const showDetail = () => {\n        return Modal.confirm({\n          type: undefined,\n          content: (\n            <div>\n              <div className=\"d-flex\">\n                <div className=\"hanzi-lg\">{record.character}</div>\n              </div>\n              <div className=\"d-flex my-md\">\n                <Info title=\"Quiz Taken\" className=\"f-grow f-50\">\n                  {record.statistic.quizCount}\n                </Info>\n                <Info title=\"Avg. Time Taken\" className=\"f-grow f-50\">\n                  {renderDuration(record.statistic.timeTakenAveragePerQuiz)}\n                </Info>\n              </div>\n              <div className=\"d-flex my-md\">\n                <Info title=\"Avg. Peek Count\" className=\"f-grow f-50\">\n                  {record.statistic.peekCountAveragePerQuiz}\n                </Info>\n                <Info title=\"Avg. Peek Time\" className=\"f-grow f-50\">\n                  {renderDuration(record.statistic.peekTimeAveragePerQuiz)}\n                </Info>\n              </div>\n              <div className=\"d-flex my-md\">\n                <Info title=\"Avg. Mistakes\" className=\"f-grow f-50\">\n                  {record.statistic.mistakesAveragePerQuiz}\n                </Info>\n                <Info title=\"Accuracy\" className=\"f-grow f-50\">\n                  {renderPercent(record.statistic.accuracy)}\n                </Info>\n              </div>\n              <Table size=\"small\" dataSource={record.statisticsPerQuiz} columns={DETAIL_COLUMN} pagination={false} />\n            </div>\n          ),\n        });\n      };\n      return (\n        <span>\n          <Button onClick={showDetail} icon={<MoreOutlined />} />\n        </span>\n      );\n    },\n  },\n]\n\nexport const StatisticsPage = () => {\n  const [quizRecords] = useQuizRecords();\n  const statistics = calculateStatistics(quizRecords);\n  return (\n    <div className=\"my-md\">\n      <Table size=\"small\" pagination={{ pageSize: 50, hideOnSinglePage: true }} dataSource={statistics} columns={SUMMARY_COLUMN} />\n    </div>\n  );\n}\n\ninterface StatisicRecord {\n  character: string;\n  statistic: StatisticPerCharacter;\n  statisticsPerQuiz: StatisticPerQuiz[];\n}\n\ninterface StatisticPerCharacter {\n  accuracy: number;\n  quizCount: number;\n  perfectQuizCount: number;\n  mistakesAveragePerQuiz: number;\n  peekCountAveragePerQuiz: number;\n  peekTimeAveragePerQuiz: number;\n  timeTakenAveragePerQuiz: number;\n}\n\ninterface StatisticPerQuiz {\n  peekCount: number;\n  accuracy: number;\n  mistakeCount: number;\n  peekTime: number;\n  timeTaken: number;\n}\n\nfunction calculateStatistics(records: QuizRecords): StatisicRecord[] {\n  const statisticsPerQuiz = records.reduce<Dictionary<StatisticPerQuiz[]>>((statistics, record) => {\n    statistics[record.data.character] = statistics[record.data.character] || [];\n    statistics[record.data.character].push(\n      calculateStatisticPerRecord(record)\n    );\n    return statistics;\n  }, {});\n\n  return Object.entries(statisticsPerQuiz)\n    .map(([character, statisticsPerQuiz]) => {\n      return {\n        character,\n        statistic: calculateStatisticPerCharacter(statisticsPerQuiz),\n        statisticsPerQuiz\n      }\n    });\n}\n\nfunction calculateStatisticPerCharacter(statisticsPerQuiz: StatisticPerQuiz[]): StatisticPerCharacter {\n  const sumMistakeCount = sumBy(statisticsPerQuiz, 'mistakeCount');\n  const sumPeekCount = sumBy(statisticsPerQuiz, 'peekCount');\n  const sumPeekTime = sumBy(statisticsPerQuiz, 'peekTime');\n  const sumTimeTaken = sumBy(statisticsPerQuiz, 'timeTaken');\n  const sumAccuracy = sumBy(statisticsPerQuiz, 'accuracy');\n\n  const perfectQuizCount = statisticsPerQuiz\n    .filter((quizStatistic) => quizStatistic.mistakeCount === 0 && quizStatistic.peekCount === 0)\n    .length;\n  const quizCount: number = statisticsPerQuiz.length;\n\n  return {\n    quizCount,\n    mistakesAveragePerQuiz: sumMistakeCount / quizCount,\n    accuracy: sumAccuracy / quizCount,\n    peekCountAveragePerQuiz: sumPeekCount / quizCount,\n    peekTimeAveragePerQuiz: sumPeekTime / quizCount,\n    timeTakenAveragePerQuiz: sumTimeTaken / quizCount,\n    perfectQuizCount\n  };\n}\n\nfunction calculateStatisticPerRecord(record: Record<QuizData>) {\n  const timeStarted = Math.min(\n    lastItem(record.data.correctStrokes).timestamp,\n    lastItem(record.data.mistakes)?.timestamp || Infinity,\n    lastItem(record.data.peeks)?.timestamp || Infinity,\n  );\n\n  const accuracyVariables =\n    record.data.mistakes.length +\n    record.data.correctStrokes.length +\n    record.data.peeks.length * record.data.correctStrokes.length;\n\n  return {\n    accuracy: record.data.correctStrokes.length / accuracyVariables,\n    timeTaken: record.timestamp - timeStarted,\n    mistakeCount: record.data.mistakes.length,\n    peekCount: record.data.peeks.length,\n    peekTime: sumBy(record.data.peeks, 'data')\n  };\n}\n\nfunction sumBy<T>(records: T[], key: keyof T) {\n  return records.reduce((result, record) => result + (record[key] as unknown as number), 0);\n}\n\nfunction lastItem<T>(array: T[]) {\n  return array[array.length - 1];\n}","import { Layout, Menu } from 'antd';\nimport React from 'react';\nimport { Route, Switch as RouteSwitch, useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { QuizPage } from './pages/QuizPage';\nimport { AboutPage } from './pages/AboutPage';\nimport { RadicalsPage } from './pages/RadicalsPage';\nimport { WordsBankPage } from './pages/WordsBankPage';\nimport { StatisticsPage } from './pages/StatisticsPage';\n\nconst { Header, Content } = Layout;\nexport const App = () => {\n  const location = useLocation();\n  return (\n    <Layout className=\"d-flex f-stretch f-column h-100vh\">\n      <Header className=\"sticky d-flex\">\n        <div className=\"f-grow\">\n          <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={[location.pathname]}>\n            <Menu.Item key=\"/\">\n              <Link to=\"/\">\n                Recall\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/statistics\">\n              <Link to=\"/statistics\">\n                Statistics\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/words\">\n              <Link to=\"/words\">\n                Words Bank\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/radicals\">\n              <Link to=\"/radicals\">\n                Radicals\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/about\">\n              <Link to=\"/about\">\n                About\n              </Link>\n            </Menu.Item>\n          </Menu>\n        </div>\n      </Header>\n      <Content className=\"f-grow\">\n        <Route>\n          <RouteSwitch>\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/statistics\" component={StatisticsPage} />\n            <Route path=\"/words\" component={WordsBankPage} />\n            <Route path=\"/radicals\" component={RadicalsPage} />\n            <Route path=\"/\" component={QuizPage} />\n          </RouteSwitch>\n        </Route>\n      </Content>\n    </Layout>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { LocalStorageProvider } from './Storage';\n\nexport const AppProvider: FC = ({ children }) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <LocalStorageProvider>\n        {children}\n      </LocalStorageProvider>\n    </BrowserRouter>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App, AppProvider } from './app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}